<html><head><base href="https://chatroom.example.com/">
<meta charset="UTF-8">
<title>غرف الدردشة العربية</title>
<style>
:root {
  --primary-color: #2196F3;
  --secondary-color: #1976D2;
  --text-color: #333;
  --bg-color: #f5f5f5;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Cairo', sans-serif;
  direction: rtl;
}

body {
  background: var(--bg-color);
}

.container {
  display: grid;
  grid-template-columns: 250px 1fr;
  height: 100vh;
}

/* Sidebar Styling */
.sidebar {
  background: #fff;
  border-left: 1px solid #ddd;
  padding: 1rem;
}

.rooms-list {
  list-style: none;
}

.room-item {
  padding: 0.8rem;
  margin: 0.5rem 0;
  background: var(--bg-color);
  border-radius: 8px;
  cursor: pointer;
  transition: 0.3s;
}

.room-item:hover {
  background: var(--primary-color);
  color: white;
}

/* Chat Area Styling */
.chat-area {
  display: flex;
  flex-direction: column;
}

.chat-header {
  background: var(--primary-color);
  color: white;
  padding: 1rem;
  text-align: center;
}

.messages-container {
  flex: 1;
  padding: 1rem;
  overflow-y: auto;
}

.message {
  margin: 0.5rem 0;
  padding: 0.8rem;
  border-radius: 8px;
  max-width: 70%;
}

.message.sent {
  background: var(--primary-color);
  color: white;
  margin-right: auto;
}

.message.received {
  background: white;
  margin-left: auto;
}

.chat-input {
  display: flex;
  padding: 1rem;
  background: white;
  border-top: 1px solid #ddd;
}

.message-input {
  flex: 1;
  padding: 0.8rem;
  border: 1px solid #ddd;
  border-radius: 20px;
  margin-left: 1rem;
}

.send-btn {
  background: var(--primary-color);
  color: white;
  border: none;
  padding: 0 1.5rem;
  border-radius: 20px;
  cursor: pointer;
  transition: 0.3s;
}

.send-btn:hover {
  background: var(--secondary-color);
}

.attachment-btn {
  background: none;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  margin-left: 0.5rem;
}

/* File Upload Modal */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.5);
}

.modal-content {
  background: white;
  width: 90%;
  max-width: 500px;
  margin: 2rem auto;
  padding: 2rem;
  border-radius: 8px;
}

.file-upload {
  padding: 2rem;
  border: 2px dashed #ddd;
  text-align: center;
  margin: 1rem 0;
}
</style>

<link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600&display=swap" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>

<body>
<div class="container">
  <div class="sidebar">
    <h2>الغرف المتاحة</h2>
    <ul class="rooms-list">
      <li class="room-item">الغرفة العامة</li>
      <li class="room-item">غرفة الألعاب</li>
      <li class="room-item">غرفة الأخبار</li>
      <li class="room-item">غرفة الرياضة</li>
    </ul>
    
    <h2 style="margin-top: 2rem">المحادثات الخاصة</h2>
    <ul class="rooms-list">
      <li class="room-item">أحمد</li>
      <li class="room-item">محمد</li>
      <li class="room-item">سارة</li>
    </ul>
  </div>

  <div class="chat-area">
    <div class="chat-header">
      <h2>الغرفة العامة</h2>
    </div>

    <div class="messages-container" id="messages">
      <div class="message received">
        مرحباً بكم في غرفة الدردشة!
      </div>
      <div class="message sent">
        شكراً لكم، سعيد بالانضمام!
      </div>
    </div>

    <div class="chat-input">
      <button class="attachment-btn">
        <i class="fas fa-paperclip"></i>
      </button>
      <input type="text" class="message-input" placeholder="اكتب رسالتك هنا...">
      <button class="send-btn">إرسال</button>
    </div>
  </div>
</div>

<!-- File Upload Modal -->
<div class="modal" id="fileModal">
  <div class="modal-content">
    <h2>رفع ملف</h2>
    <div class="file-upload">
      <i class="fas fa-cloud-upload-alt fa-3x"></i>
      <p>اسحب الملفات هنا أو اضغط للاختيار</p>
      <input type="file" multiple style="display: none" id="fileInput">
    </div>
    <button class="send-btn">رفع الملف</button>
    <button onclick="closeModal()" style="margin-right: 1rem">إلغاء</button>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Variables
  const messageInput = document.querySelector('.message-input');
  const sendButton = document.querySelector('.send-btn');
  const messagesContainer = document.querySelector('#messages');
  const attachmentBtn = document.querySelector('.attachment-btn');
  const fileModal = document.getElementById('fileModal');
  const fileUpload = document.querySelector('.file-upload');
  const fileInput = document.getElementById('fileInput');

  // Send Message Function
  function sendMessage() {
    const message = messageInput.value.trim();
    if (message) {
      const messageElement = document.createElement('div');
      messageElement.classList.add('message', 'sent');
      messageElement.textContent = message;
      messagesContainer.appendChild(messageElement);
      messageInput.value = '';
      messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
  }

  // Event Listeners
  sendButton.addEventListener('click', sendMessage);
  
  messageInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      sendMessage();
    }
  });

  attachmentBtn.addEventListener('click', () => {
    fileModal.style.display = 'block';
  });

  fileUpload.addEventListener('click', () => {
    fileInput.click();
  });

  fileUpload.addEventListener('dragover', (e) => {
    e.preventDefault();
    fileUpload.style.background = '#f0f0f0';
  });

  fileUpload.addEventListener('dragleave', () => {
    fileUpload.style.background = 'white';
  });

  fileUpload.addEventListener('drop', (e) => {
    e.preventDefault();
    fileUpload.style.background = 'white';
    const files = e.dataTransfer.files;
    handleFiles(files);
  });

  fileInput.addEventListener('change', (e) => {
    handleFiles(e.target.files);
  });

  // Handle File Upload
  function handleFiles(files) {
    Array.from(files).forEach(file => {
      const reader = new FileReader();
      reader.onload = function(e) {
        let messageElement = document.createElement('div');
        messageElement.classList.add('message', 'sent');
        
        if (file.type.startsWith('image/')) {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.style.maxWidth = '100%';
          messageElement.appendChild(img);
        } else if (file.type.startsWith('video/')) {
          const video = document.createElement('video');
          video.src = e.target.result;
          video.controls = true;
          video.style.maxWidth = '100%';
          messageElement.appendChild(video);
        } else {
          messageElement.textContent = `ملف: ${file.name}`;
        }
        
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      };
      reader.readAsDataURL(file);
    });
    
    closeModal();
  }

  // Close Modal
  window.closeModal = function() {
    fileModal.style.display = 'none';
  };

  // Close modal when clicking outside
  window.addEventListener('click', (e) => {
    if (e.target === fileModal) {
      closeModal();
    }
  });
});

// Room Switching
document.querySelectorAll('.room-item').forEach(room => {
  room.addEventListener('click', () => {
    document.querySelector('.chat-header h2').textContent = room.textContent;
    // Here you would typically load the room's message history
  });
});
</script>

</body></html>
